name: Create Tag and Release

on:
  workflow_run:
    workflows: ["Test, Lint, and Build"]
    types:
      - completed
    branches:
      - main

permissions:
  contents: write
  actions: read
  id-token: write

jobs:
  push-git-tag:
    if: ${{ github.event.workflow_run.conclusion == 'success' && contains(github.event.workflow_run.head_commit.message, 'Merge pull request') && contains(github.event.workflow_run.head_commit.message, 'release-v') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download artifact using GitHub CLI
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          mkdir -p dist
          gh run download ${{ github.event.workflow_run.id }} --name release-artifacts-main --dir dist/

      - name: Extract version from branch name
        id: version
        run: |
          BRANCH_NAME="${{ github.event.workflow_run.head_branch }}"
          VERSION=${BRANCH_NAME#release-v}
          VERSION=${VERSION#release/}
          VERSION=${VERSION#release-}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@github.com"

      - name: Create and push tag
        run: |
          git tag "v${{ steps.version.outputs.version }}" -m "Release v${{ steps.version.outputs.version }}"
          git push origin "v${{ steps.version.outputs.version }}" 
          echo "Created and pushed tag v${{ steps.version.outputs.version }}"

      - name: Get tag name
        id: get_tag
        run: |
          TAG=$(git describe --tags --abbrev=0)
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "Using tag: $TAG"

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }}
          files: |
            dist/*.whl
            dist/*.tar.gz
          generate_release_notes: true
